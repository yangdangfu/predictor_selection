

# ---------------------------------------------------------------------------- #
# ANCHOR REGION
REGIONS: 
  Yangtze: 
    long_name: Yangtze_river_basin
    lat_range: [27.5, 35] 
    lon_range: [110, 122.5] 
    shape_range: null
  SC:
    long_name: Souch_china
    lat_range: [15, 27.5] 
    lon_range: [102.5, 120] 
    shape_range: 
      region_level: PROVINCE 
      region_names: ["Guangdong", "Guangxi", "Hainan"]
  # GD:
  #   long_name: Guangdong
  #   lat_range: [20, 27.5] 
  #   lon_range: [107.5, 120] 
  #   shape_range:
  #     region_level: PROVINCE 
  #     region_names: Guangdong
  CHN:
    long_name: China
    lat_range: [15, 55] 
    lon_range: [70, 137.5] 
    shape_range:
      region_level: COUNTRY 
      region_names: [China, Taiwan]
  # EU:
  #   long_name: Europe
  #   lat_range: [35, 72.5] # [-10, 32, 36, 72]
  #   lon_range: [350, 32.5] # [-10, 32, 36, 72]
  #   shape_range: null 

# ---------------------------------------------------------------------------- #
# ANCHOR Data 
DATAS:
  input_factors: 
    uwnd: [1000, 850, 700, 500]
    vwnd: [1000, 850, 700, 500]
    shum: [1000, 850, 700, 500]
    hgt: [1000, 850, 700, 500]
    air: [1000, 850, 700, 500]
    slp: null
  input_source: NCEP_REANALYSIS
  factor: precip
  start_date: 1979-01-01
  end_date: 2021-12-31
# path to save data
data_path: ./DATA
# daily data
in_daily_filepath: ${data_path}/${DATAS.factor}_{region}_in_daily.nc
out_daily_filepath: ${data_path}/${DATAS.factor}_{region}_out_daily.nc
out_mask_daily_filepath: ${data_path}/${DATAS.factor}_{region}_grid_mask_daily.npy
# monthly data
in_aug_filepath: ${data_path}/${DATAS.factor}_{region}_in_aug.nc
in_noaug_filepath: ${data_path}/${DATAS.factor}_{region}_in_noaug.nc
out_aug_filepath: ${data_path}/${DATAS.factor}_{region}_out_aug.nc
out_noaug_filepath: ${data_path}/${DATAS.factor}_{region}_out_noaug.nc
out_mask_filepath: ${data_path}/${DATAS.factor}_{region}_grid_mask.npy

# ---------------------------------------------------------------------------- #
# ANCHOR Dataloader or Dataset
candidate_predictors: ['air1000', 'air500', 'air700', 'air850', 'hgt1000', 'hgt500', 'hgt700', 'hgt850', 'shum1000', 'shum500', 'shum700', 'shum850', 'uwnd1000', 'uwnd500', 'uwnd700', 'uwnd850', 'vwnd1000', 'vwnd500', 'vwnd700', 'vwnd850']
region: SC
start_year: 1979
end_year: 2021
num_years: 43
num_folds: 7
bistr: "00000100010101010101"
# input_factors_sub: "11111111111111111111" # refer to selector/slect_predictors.py
input_factors_sub: ${bistr} # refer to selector/slect_predictors.py
x_processor_names: ["Standardisation"]
y_processor_names: ["Standardisation"]
aug: True
val_aug: False
test_aug: False

batch_size: 1024
shuffle: True
num_workers: 0

# ---------------------------------------------------------------------------- #
# ANCHOR model 
model: CNN10 # class name of the model, like CNN1, CNN_FC, CNN0, CNN10, CNN_LRF, etc.
seed: null # if seed is int, the model parameter won't be randomly intilized
padding: 1 

optim_type: adam # adam or sgd
loss_type: nan_mse
lr: 1e-3
weight_decay: 0

# ---------------------------------------------------------------------------- #
# ANCHOR Trainer 
model_save_dir: models
gpu: 0
max_epochs: 200
monitor: loss_val 

# ---------------------------------------------------------------------------- #
# ANCHOR output paths for trainer
run_root: outputs_${region}
hydra:
  run:
    dir: ${run_root}/${now:%Y%m%d-%H%M%S}${hydra.job.override_dirname}
  job:
    config:
      override_dirname:
        exclude_keys:
          - batch_size
          - gpu
  sweep:
    dir: ${run_root}
    subdir: ${now:%Y%m%d-%H%M%S}${hydra.job.override_dirname}